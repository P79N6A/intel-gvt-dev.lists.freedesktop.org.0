Delivered-To: linux.kernel.mailinglists@gmail.com
Received: by 2002:a81:ed4:0:0:0:0:0 with SMTP id 203csp1547769ywo;
        Fri, 19 Apr 2019 01:41:39 -0700 (PDT)
X-Google-Smtp-Source: APXvYqzyM0zYHiLASYLnGN4kwlTIprlkEN0DOd3V0OwBIxblXYo/9e6hDGwtwVtBIYeZvT8+2A3R
X-Received: by 2002:a62:1193:: with SMTP id 19mr2607883pfr.82.1555663299095;
        Fri, 19 Apr 2019 01:41:39 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1555663299; cv=none;
        d=google.com; s=arc-20160816;
        b=G2pfg3eD+hhwmacBTDugUcvwY2l3aWCE17jhSqKIiU8vMj9SSveF5me9vMmBpuzMGN
         4kkm1rLIZlayNpTPgLuTwVBsdNR748wen9Vle34oYYHo/77lnuGU+PXzkbWkpJ61q1wi
         g4I0tO7cPo3YXWi367RrgAms7cHW9IlNZZCWmr7RTiC+a+4IJFT+gJ0OEv9WTx/PLQVX
         A58ZkTSRAq9YxFlvLbHtuEIrv7soKRhpM/SjbyLQTF4vXNiwZxJp+vK7dOS/ZepvQXQz
         KD7zNn7G/j5mfBmVty8j/3DrbzQxRINlGSQmv4rF/802P4rVo9TnRkOqqryAjpCh8Jcg
         ZOaA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=sender:errors-to:content-transfer-encoding:mime-version:cc
         :list-subscribe:list-help:list-post:list-archive:list-unsubscribe
         :list-id:precedence:references:in-reply-to:message-id:date:subject
         :to:from:delivered-to;
        bh=mJlQuLZp5Djpw6M4erI3F+ACmazrHgDClehbPrjN3Xw=;
        b=XgpgJaSaOU34n0aMu1reIFIYgiMjNCQju26q8ptUBPj3YhPqmTOhiIhwF/4LWIJX1Q
         3JW05mQQPnioB200wznTu6P82wk1wbM3LD9x2hNt/0bWpfcNbKckF7V0kwpo6ktzlLJf
         1TDv6IQxCo2AHALrdeWp7uGpEeWAt75k40ezLTN/a37U/nUukritctVf+hZgfUF+q7tl
         J+Xch6HgIqr9g71dKdC9qVVQH2c+bjTaR2oaVxx9c+qwdjPtzhnnRAW+NP5P21gm0EpO
         5ih8a0CdlLSIgBYDym/JdD33kj99+MbfcvtHrZILhSD5ccf98w3Xtp03n8EYv9lCiicc
         PRRA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of intel-gvt-dev-bounces@lists.freedesktop.org designates 131.252.210.177 as permitted sender) smtp.mailfrom=intel-gvt-dev-bounces@lists.freedesktop.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
Received: from gabe.freedesktop.org (gabe.freedesktop.org. [131.252.210.177])
        by mx.google.com with ESMTPS id u184si4239663pgd.377.2019.04.19.01.41.38
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 19 Apr 2019 01:41:39 -0700 (PDT)
Received-SPF: pass (google.com: best guess record for domain of intel-gvt-dev-bounces@lists.freedesktop.org designates 131.252.210.177 as permitted sender) client-ip=131.252.210.177;
Authentication-Results: mx.google.com;
       spf=pass (google.com: best guess record for domain of intel-gvt-dev-bounces@lists.freedesktop.org designates 131.252.210.177 as permitted sender) smtp.mailfrom=intel-gvt-dev-bounces@lists.freedesktop.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id ADA3C891D2;
	Fri, 19 Apr 2019 08:41:38 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AD993891D2
 for <intel-gvt-dev@lists.freedesktop.org>;
 Fri, 19 Apr 2019 08:41:37 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 19 Apr 2019 01:41:37 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.60,368,1549958400"; d="scan'208";a="338990800"
Received: from joy-optiplex-7040.sh.intel.com ([10.239.13.9])
 by fmsmga005.fm.intel.com with ESMTP; 19 Apr 2019 01:41:32 -0700
From: Yan Zhao <yan.y.zhao@intel.com>
To: intel-gvt-dev@lists.freedesktop.org
Subject: [PATCH 2/2] drm/i915/gvt: export mdev device version to sysfs for
 Intel vGPU
Date: Fri, 19 Apr 2019 04:35:59 -0400
Message-Id: <20190419083559.19725-1-yan.y.zhao@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190419083258.19580-1-yan.y.zhao@intel.com>
References: <20190419083258.19580-1-yan.y.zhao@intel.com>
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: cjia@nvidia.com, kvm@vger.kernel.org, aik@ozlabs.ru,
 Zhengxiao.zx@alibaba-inc.com, shuangtai.tst@alibaba-inc.com,
 qemu-devel@nongnu.org, kwankhede@nvidia.com, eauger@redhat.com,
 yi.l.liu@intel.com, eskultet@redhat.com, ziye.yang@intel.com,
 mlevitsk@redhat.com, pasic@linux.ibm.com, libvir-list@redhat.com,
 arei.gonglei@huawei.com, felipe@nutanix.com, Ken.Xue@amd.com,
 kevin.tian@intel.com, Yan Zhao <yan.y.zhao@intel.com>, dgilbert@redhat.com,
 zhenyuw@linux.intel.com, alex.williamson@redhat.com, changpeng.liu@intel.com,
 cohuck@redhat.com, linux-kernel@vger.kernel.org, zhi.a.wang@intel.com,
 jonathan.davies@nutanix.com, shaopeng.he@intel.com
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

VGhpcyBmZWF0dXJlIGltcGxlbWVudHMgdGhlIHZlcnNpb24gYXR0cmlidXRlIGZvciBJbnRlbCdz
IHZHUFUgbWRldgpkZXZpY2VzLgoKdmVyc2lvbiBhdHRyaWJ1dGUgaXMgcncuIEl0IGlzIHF1ZXJp
ZWQgYnkgdXNlcnNwYWNlIHNvZnR3YXJlIGxpa2UgbGlidmlydAp0byBjaGVjayB3aGV0aGVyIHR3
byB2R1BVcyBhcmUgY29tcGF0aWJsZSBmb3IgbGl2ZSBtaWdyYXRpb24uCgpJdCBjb25zaXN0cyBv
ZiB0d28gcGFydHM6IGNvbW1vbiBwYXJ0IGFuZCB2ZW5kb3IgcHJvcHJpZXRhcnkgcGFydC4KY29t
bW9uIHBhcnQ6IDMyIGJpdC4gbG93ZXIgMTYgYml0cyBpcyB2ZW5kb3IgaWQgYW5kIGhpZ2hlciAx
NiBiaXRzCiAgICAgICAgICAgICBpZGVudGlmaWVzIGRldmljZSB0eXBlLiBlLmcuLCBmb3IgcGNp
IGRldmljZSwgaXQgaXMKICAgICAgICAgICAgICJwY2kgdmVuZG9yIGlkIiB8IChWRklPX0RFVklD
RV9GTEFHU19QQ0kgPDwgMTYpLgp2ZW5kb3IgcHJvcHJpZXRhcnkgcGFydDogdGhpcyBwYXJ0IGlz
IHZhcmllZCBpbiBsZW5ndGguIHZlbmRvciBkcml2ZXIgY2FuCiAgICAgICAgICAgICBzcGVjaWZ5
IGFueSBzdHJpbmcgdG8gaWRlbnRpZnkgYSBkZXZpY2UuCgpGb3IgSW50ZWwgdkdQVSBvZiBnZW44
IGFuZCBnZW45LCB0aGUgdmVuZG9yIHByb3ByaWV0YXJ5IHBhcnQgY3VycmVudGx5CmNvbnNpc3Rz
IG9mIDIgZmllbGRzOiAiZGV2aWNlIGlkIiArICJtZGV2IHR5cGUiLgoKUmVhZGluZyBmcm9tIGEg
dkdQVSdzIHZlcnNpb24gYXR0cmlidXRlLCBhIHN0cmluZyBpcyByZXR1cm5lZCBpbiBiZWxvdwpm
b3JtYXQ6IDAwMDI4MDg2LTxkZXZpY2UgaWQ+LTxtZGV2IHR5cGU+LiBlLmcuCjAwMDI4MDg2LTE5
M2ItaTkxNS1HVlRnX1Y1XzIuCgpXcml0aW5nIGEgc3RyaW5nIHRvIGEgdkdQVSdzIHZlcnNpb24g
YXR0cmlidXRlIHdpbGwgdHJpZ2dlciBHVlQgdG8gY2hlY2sKd2hldGhlciBhIHZHUFUgaWRlbnRp
ZmllZCBieSB0aGUgd3JpdHRlbiBzdHJpbmcgaXMgY29tcGF0aWJsZSB3aXRoCmN1cnJlbnQgdkdQ
VSBvd25pbmcgdGhpcyB2ZXJzaW9uIGF0dHJpYnV0ZS4gZXJybm8gaXMgcmV0dXJuZWQgaWYgdGhl
IHR3bwp2R1BVcyBhcmUgaW5jb21wYXRpYmxlLiBUaGUgbGVuZ3RoIG9mIHdyaXR0ZW4gc3RyaW5n
IGlzIHJldHVybmVkIGluCmNvbXBhdGlibGUgY2FzZS4KCkZvciBvdGhlciBwbGF0Zm9ybXMsIGFu
ZCBmb3IgR1ZUIG5vdCBzdXBwb3J0aW5nIHZHUFUgbGl2ZSBtaWdyYXRpb24KZmVhdHVyZSwgZXJy
bm9zIGFyZSByZXR1cm5lZCB3aGVuIHJlYWQvd3JpdGUgb2YgbWRldiBkZXZpY2VzJyB2ZXJzaW9u
CmF0dHJpYnV0ZXMuCgpGb3Igb2xkIEdWVCB2ZXJzaW9ucyB3aGVyZSBubyB2ZXJzaW9uIGF0dHJp
YnV0ZXMgZXhwb3NlZCBpbiBzeXNmcywgaXQgaXMKcmVnYXJkZWQgYXMgbm90IHN1cHBvcnRpbmcg
dkdQVSBsaXZlIG1pZ3JhdGlvbi4KCkZvciBmdXR1cmUgcGxhdGZvcm1zLCBiZXNpZGVzIHRoZSBj
dXJyZW50IDIgZmllbGRzIGluIHZlbmRvciBwcm9wcmlldGFyeQpwYXJ0LCBtb3JlIGZpZWxkcyBt
YXkgYmUgYWRkZWQgdG8gaWRlbnRpZnkgSW50ZWwgdkdQVSB3ZWxsIGZvciBsaXZlCm1pZ3JhdGlv
biBwdXJwb3NlLgoKQ2M6IEFsZXggV2lsbGlhbXNvbiA8YWxleC53aWxsaWFtc29uQHJlZGhhdC5j
b20+CkNjOiBFcmlrIFNrdWx0ZXR5IDxlc2t1bHRldEByZWRoYXQuY29tPgpDYzogIkRyLiBEYXZp
ZCBBbGFuIEdpbGJlcnQiIDxkZ2lsYmVydEByZWRoYXQuY29tPgpDYzogQ29ybmVsaWEgSHVjayA8
Y29odWNrQHJlZGhhdC5jb20+CkNjOiAiVGlhbiwgS2V2aW4iIDxrZXZpbi50aWFuQGludGVsLmNv
bT4KQ2M6IFpoZW55dSBXYW5nIDx6aGVueXV3QGxpbnV4LmludGVsLmNvbT4KQ2M6ICJXYW5nLCBa
aGkgQSIgPHpoaS5hLndhbmdAaW50ZWwuY29tPgpjOiBOZW8gSmlhIDxjamlhQG52aWRpYS5jb20+
CkNjOiBLaXJ0aSBXYW5raGVkZSA8a3dhbmtoZWRlQG52aWRpYS5jb20+CgpTaWduZWQtb2ZmLWJ5
OiBZYW4gWmhhbyA8eWFuLnkuemhhb0BpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Z0L01ha2VmaWxlICAgICAgICAgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0
L2RldmljZV92ZXJzaW9uLmMgfCA5NCArKysrKysrKysrKysrKysrKysrKysrKwogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3Z0L2d2dC5jICAgICAgICAgICAgfCA1NSArKysrKysrKysrKysrCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmggICAgICAgICAgICB8ICA2ICsrCiA0IGZpbGVzIGNo
YW5nZWQsIDE1NiBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCiBjcmVhdGUgbW9kZSAxMDA2
NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2RldmljZV92ZXJzaW9uLmMKCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvTWFrZWZpbGUgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndnQvTWFrZWZpbGUKaW5kZXggMjcxZmI0NmQ0ZGQwLi41NGUyMDlhMjM4OTkgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9NYWtlZmlsZQorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndnQvTWFrZWZpbGUKQEAgLTMsNyArMyw3IEBAIEdWVF9ESVIgOj0gZ3Z0CiBHVlRf
U09VUkNFIDo9IGd2dC5vIGFwZXJ0dXJlX2dtLm8gaGFuZGxlcnMubyB2Z3B1Lm8gdHJhY2VfcG9p
bnRzLm8gZmlybXdhcmUubyBcCiAJaW50ZXJydXB0Lm8gZ3R0Lm8gY2ZnX3NwYWNlLm8gb3ByZWdp
b24ubyBtbWlvLm8gZGlzcGxheS5vIGVkaWQubyBcCiAJZXhlY2xpc3QubyBzY2hlZHVsZXIubyBz
Y2hlZF9wb2xpY3kubyBtbWlvX2NvbnRleHQubyBjbWRfcGFyc2VyLm8gZGVidWdmcy5vIFwKLQlm
Yl9kZWNvZGVyLm8gZG1hYnVmLm8gcGFnZV90cmFjay5vCisJZmJfZGVjb2Rlci5vIGRtYWJ1Zi5v
IHBhZ2VfdHJhY2subyBkZXZpY2VfdmVyc2lvbi5vCiAKIGNjZmxhZ3MteQkJCQkrPSAtSSQoc3Jj
KSAtSSQoc3JjKS8kKEdWVF9ESVIpCiBpOTE1LXkJCQkJCSs9ICQoYWRkcHJlZml4ICQoR1ZUX0RJ
UikvLCAkKEdWVF9TT1VSQ0UpKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0
L2RldmljZV92ZXJzaW9uLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZGV2aWNlX3ZlcnNp
b24uYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmM2NDAxMGQyYmM1
NAotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9kZXZpY2VfdmVy
c2lvbi5jCkBAIC0wLDAgKzEsOTQgQEAKKy8qCisgKiBDb3B5cmlnaHQoYykgMjAxMS0yMDE3IElu
dGVsIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLgorICoKKyAqIFBlcm1pc3Npb24g
aXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmlu
ZyBhCisgKiBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlv
biBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0
aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbgorICogdGhlIHJp
Z2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1
YmxpY2Vuc2UsCisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8g
cGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBk
byBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFi
b3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2UgKGluY2x1ZGlu
ZyB0aGUgbmV4dAorICogcGFyYWdyYXBoKSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVz
IG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZQorICogU29mdHdhcmUuCisgKgorICogVEhF
IFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJ
TkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8g
VEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQQVJU
SUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisg
KiBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJ
TSwgREFNQUdFUyBPUiBPVEhFUgorICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBP
RiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKKyAqIE9VVCBPRiBP
UiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVB
TElOR1MgSU4gVEhFCisgKiBTT0ZUV0FSRS4KKyAqLworI2luY2x1ZGUgPGxpbnV4L3ZmaW8uaD4K
KyNpbmNsdWRlICJpOTE1X2Rydi5oIgorCisjZGVmaW5lIEdWVF9WRklPX0RFVklDRV9WRU5ET1Jf
SUQgKCgweDgwODYpIHwJXAorCQkoKFZGSU9fREVWSUNFX0ZMQUdTX1BDSSAmIDB4ZmYpIDw8IDE2
KSkKKworI2RlZmluZSBHVlRfREVWSUNFX1ZFUlNJT05fQ09NTU9OX0xFTiAweDgKKyNkZWZpbmUg
R1ZUX0RFVklDRV9WRVJTSU9OX0RFVklDRV9JRF9MRU4gMHg0CisKK3N0YXRpYyBib29sIGlzX2Nv
bXBhdGlibGUoY29uc3QgY2hhciAqc2VsZiwgY29uc3QgY2hhciAqcmVtb3RlKQoreworCWlmIChz
dHJsZW4ocmVtb3RlKSAhPSBzdHJsZW4oc2VsZikpCisJCXJldHVybiBmYWxzZTsKKworCXJldHVy
biAoc3RybmNtcChzZWxmLCByZW1vdGUsIHN0cmxlbihzZWxmKSkpID8gZmFsc2UgOiB0cnVlOwor
fQorCitzc2l6ZV90IGludGVsX2d2dF9nZXRfdmZpb19kZXZpY2VfdmVyc2lvbl9sZW4oc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQoreworCWlmICghSVNfR0VOKGRldl9wcml2LCA4
KSAmJiAhSVNfR0VOKGRldl9wcml2LCA5KSkKKwkJcmV0dXJuIC1FTk9ERVY7CisKKwlyZXR1cm4g
UEFHRV9TSVpFOworfQorCitzc2l6ZV90IGludGVsX2d2dF9nZXRfdmZpb19kZXZpY2VfdmVyc2lv
bihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCisJCWNoYXIgKmJ1ZiwgY29uc3Qg
Y2hhciAqbWRldl90eXBlKQoreworCWludCBjbnQgPSAwLCByZXQgPSAwOworCWNvbnN0IGNoYXIg
KnN0ciA9IE5VTEw7CisKKwkvKiBjdXJyZW50bHkgb25seSBnZW44ICYgZ2VuOSBhcmUgc3VwcG9y
dGVkICovCisJaWYgKCFJU19HRU4oZGV2X3ByaXYsIDgpICYmICFJU19HRU4oZGV2X3ByaXYsIDkp
KQorCQlyZXR1cm4gLUVOT0RFVjsKKworCS8qIGZpcnN0IDMyIGJpdCBjb21tb24gcGFydCBzcGVj
aWZ5aW5nIHZlbmRvciBpZCBhbmQgaXQncyBhIHBjaQorCSAqIGRldmljZQorCSAqLworCWNudCA9
IHNucHJpbnRmKGJ1ZiwgR1ZUX0RFVklDRV9WRVJTSU9OX0NPTU1PTl9MRU4gKyAxLAorCQkJIiUw
OHgiLCBHVlRfVkZJT19ERVZJQ0VfVkVORE9SX0lEKTsKKwlidWYgKz0gY250OworCXJldCArPSBj
bnQ7CisKKwkvKiB2ZW5kb3IgcHJvcHJpZXRhcnkgcGFydDogZGV2aWNlIGlkICsgbWRldiB0eXBl
ICovCisJLyogZGV2aWNlIGlkICovCisJY250ID0gc25wcmludGYoYnVmLCBHVlRfREVWSUNFX1ZF
UlNJT05fREVWSUNFX0lEX0xFTiArIDIsCisJCQkiLSUwNHgiLCBJTlRFTF9ERVZJRChkZXZfcHJp
dikpOworCWJ1ZiArPSBjbnQ7CisJcmV0ICs9IGNudDsKKworCS8qIG1kZXYgdHlwZSAqLworCXN0
ciA9IG1kZXZfdHlwZTsKKwljbnQgPSBzbnByaW50ZihidWYsIHN0cmxlbihzdHIpICsgMywgIi0l
c1xuIiwgbWRldl90eXBlKTsKKwlidWYgKz0gY250OworCXJldCArPSBjbnQ7CisKKwlyZXR1cm4g
cmV0OworfQorCitzc2l6ZV90IGludGVsX2d2dF9jaGVja192ZmlvX2RldmljZV92ZXJzaW9uKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKKwkJY29uc3QgY2hhciAqc2VsZiwgY29u
c3QgY2hhciAqcmVtb3RlKQoreworCisJLyogY3VycmVudGx5IG9ubHkgZ2VuOCAmIGdlbjkgYXJl
IHN1cHBvcnRlZCAqLworCWlmICghSVNfR0VOKGRldl9wcml2LCA4KSAmJiAhSVNfR0VOKGRldl9w
cml2LCA5KSkKKwkJcmV0dXJuIC1FTk9ERVY7CisKKwlpZiAoIWlzX2NvbXBhdGlibGUoc2VsZiwg
cmVtb3RlKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlyZXR1cm4gMDsKK30KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9ndnQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2
dC9ndnQuYwppbmRleCA0M2Y0MjQyMDYyZGQuLmU3MjA0NjViOTNkOCAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2
dC9ndnQuYwpAQCAtMTA1LDE0ICsxMDUsNjkgQEAgc3RhdGljIHNzaXplX3QgZGVzY3JpcHRpb25f
c2hvdyhzdHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IGRldmljZSAqZGV2LAogCQkgICAgICAg
dHlwZS0+d2VpZ2h0KTsKIH0KIAorc3RhdGljIHNzaXplX3QgdmVyc2lvbl9zaG93KHN0cnVjdCBr
b2JqZWN0ICprb2JqLCBzdHJ1Y3QgZGV2aWNlICpkZXYsCisJCWNoYXIgKmJ1ZikKK3sKKyNpZmRl
ZiBHVlRfTUlHUkFUSU9OX1ZFUlNJT04KKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9
IGtkZXZfdG9faTkxNShkZXYpOworCWNvbnN0IGNoYXIgKm1kZXZfdHlwZSA9IGtvYmplY3RfbmFt
ZShrb2JqKTsKKworCXJldHVybiBpbnRlbF9ndnRfZ2V0X3ZmaW9fZGV2aWNlX3ZlcnNpb24oaTkx
NSwgYnVmLCBtZGV2X3R5cGUpOworI2Vsc2UKKwkvKiBkbyBub3Qgc3VwcG9ydCBsaXZlIG1pZ3Jh
dGlvbiAqLworCXJldHVybiAtRUlOVkFMOworI2VuZGlmCit9CisKK3N0YXRpYyBzc2l6ZV90IHZl
cnNpb25fc3RvcmUoc3RydWN0IGtvYmplY3QgKmtvYmosIHN0cnVjdCBkZXZpY2UgKmRldiwKKwkJ
Y29uc3QgY2hhciAqYnVmLCBzaXplX3QgY291bnQpCit7CisjaWZkZWYgR1ZUX01JR1JBVElPTl9W
RVJTSU9OCisJY2hhciAqcmVtb3RlID0gTlVMTCwgKnNlbGYgPSBOVUxMOworCWludCBsZW4sIHJl
dCA9IDA7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBrZGV2X3RvX2k5MTUoZGV2
KTsKKwljb25zdCBjaGFyICptZGV2X3R5cGUgPSBrb2JqZWN0X25hbWUoa29iaik7CisKKwlsZW4g
PSBpbnRlbF9ndnRfZ2V0X3ZmaW9fZGV2aWNlX3ZlcnNpb25fbGVuKGk5MTUpOworCWlmIChsZW4g
PCAwKQorCQlyZXR1cm4gbGVuOworCisJc2VsZiA9IGttYWxsb2MobGVuLCBHRlBfS0VSTkVMKTsK
KwlpZiAoIXNlbGYpCisJCXJldHVybiAtRU5PTUVNOworCisJcmV0ID0gaW50ZWxfZ3Z0X2dldF92
ZmlvX2RldmljZV92ZXJzaW9uKGk5MTUsIHNlbGYsIG1kZXZfdHlwZSk7CisJaWYgKHJldCA8IDAp
CisJCWdvdG8gb3V0OworCisJcmVtb3RlID0ga3N0cm5kdXAoYnVmLCBjb3VudCwgR0ZQX0tFUk5F
TCk7CisJaWYgKCFyZW1vdGUpIHsKKwkJcmV0ID0gLUVOT01FTTsKKwkJZ290byBvdXQ7CisJfQor
CisJcmV0ID0gaW50ZWxfZ3Z0X2NoZWNrX3ZmaW9fZGV2aWNlX3ZlcnNpb24oaTkxNSwgc2VsZiwg
cmVtb3RlKTsKKworb3V0OgorCWtmcmVlKHNlbGYpOworCWtmcmVlKHJlbW90ZSk7CisJcmV0dXJu
IChyZXQgPCAwID8gcmV0IDogY291bnQpOworI2Vsc2UKKwkvKiBkbyBub3Qgc3VwcG9ydCBsaXZl
IG1pZ3JhdGlvbiAqLworCXJldHVybiAtRUlOVkFMOworI2VuZGlmCit9CisKIHN0YXRpYyBNREVW
X1RZUEVfQVRUUl9STyhhdmFpbGFibGVfaW5zdGFuY2VzKTsKIHN0YXRpYyBNREVWX1RZUEVfQVRU
Ul9STyhkZXZpY2VfYXBpKTsKIHN0YXRpYyBNREVWX1RZUEVfQVRUUl9STyhkZXNjcmlwdGlvbik7
CitzdGF0aWMgTURFVl9UWVBFX0FUVFJfUlcodmVyc2lvbik7CiAKIHN0YXRpYyBzdHJ1Y3QgYXR0
cmlidXRlICpndnRfdHlwZV9hdHRyc1tdID0gewogCSZtZGV2X3R5cGVfYXR0cl9hdmFpbGFibGVf
aW5zdGFuY2VzLmF0dHIsCiAJJm1kZXZfdHlwZV9hdHRyX2RldmljZV9hcGkuYXR0ciwKIAkmbWRl
dl90eXBlX2F0dHJfZGVzY3JpcHRpb24uYXR0ciwKKwkmbWRldl90eXBlX2F0dHJfdmVyc2lvbi5h
dHRyLAogCU5VTEwsCiB9OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQv
Z3Z0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmgKaW5kZXggZjVhMzI4YjUyOTBh
Li40MDYyZjZiMjZhY2YgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9ndnQu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmgKQEAgLTY4Nyw2ICs2ODcsMTIg
QEAgdm9pZCBpbnRlbF9ndnRfZGVidWdmc19yZW1vdmVfdmdwdShzdHJ1Y3QgaW50ZWxfdmdwdSAq
dmdwdSk7CiBpbnQgaW50ZWxfZ3Z0X2RlYnVnZnNfaW5pdChzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQp
Owogdm9pZCBpbnRlbF9ndnRfZGVidWdmc19jbGVhbihzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQpOwog
Citzc2l6ZV90IGludGVsX2d2dF9nZXRfdmZpb19kZXZpY2VfdmVyc2lvbihzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwKKwkJY2hhciAqYnVmLCBjb25zdCBjaGFyICptZGV2X3R5cGUpOwor
c3NpemVfdCBpbnRlbF9ndnRfY2hlY2tfdmZpb19kZXZpY2VfdmVyc2lvbihzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCisJCWNvbnN0IGNoYXIgKnNlbGYsIGNvbnN0IGNoYXIgKnJl
bW90ZSk7Citzc2l6ZV90CitpbnRlbF9ndnRfZ2V0X3ZmaW9fZGV2aWNlX3ZlcnNpb25fbGVuKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiAKICNpbmNsdWRlICJ0cmFjZS5oIgog
I2luY2x1ZGUgIm1wdC5oIgotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwppbnRlbC1ndnQtZGV2IG1haWxpbmcgbGlzdAppbnRlbC1ndnQt
ZGV2QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2ludGVsLWd2dC1kZXY=
