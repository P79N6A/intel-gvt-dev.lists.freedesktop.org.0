Delivered-To: linux.kernel.mailinglists@gmail.com
Received: by 2002:a81:3684:0:0:0:0:0 with SMTP id d126csp3034221ywa;
        Mon, 18 Feb 2019 23:52:17 -0800 (PST)
X-Google-Smtp-Source: AHgI3Ia6VyjjLbd90dxbnWlxpjjx3IajorJN6Gnv28mfuZASPV8qfGfRkV2PytGnTu6tv835c/L3
X-Received: by 2002:a17:902:fa2:: with SMTP id 31mr29800223plz.75.1550562737533;
        Mon, 18 Feb 2019 23:52:17 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1550562737; cv=none;
        d=google.com; s=arc-20160816;
        b=apYN+AQ6imaEJ0sKAjh+1LSZH2f+iVYNhLANy6e6bJFA8sEhAMSaiTEBzGuJiJHdpS
         U8GvmytCS1muiQtCLVsKysMY829Reo4DDiSXgWW/uUuGyjoMzA3K/YhJ8I/QawFEGUvr
         vEURko9UYVnzZfczB8u8yIECwp28wjRZWQRoirBX0a7ArHVnkvCQjMIkRlCgDszlE2bv
         iIExdZfHNC2T7YyQgdqYd3QC76eCah4DD0tBfr15joseEpuIkF/e0bdbDq2REMevliwm
         p3b+E0cbA6C47tK0D49+8CN7O4jo6RG48SNdlP8mTHOZbcyXFYZYXA5QJWVxiA/D9Pe3
         zztQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=sender:errors-to:content-transfer-encoding:mime-version:cc
         :list-subscribe:list-help:list-post:list-archive:list-unsubscribe
         :list-id:precedence:references:in-reply-to:message-id:date:subject
         :to:from:delivered-to;
        bh=Y0AUgBa+go6y2GimEumcQXKm3q/kcsvp6xEVvee48uM=;
        b=iHBkGumuYpzDSI+0cA+xR1hldgqTsF2bax+NaL48X/IXs5c0RhOvVIvIcQrvlY2VMU
         3/q8QjhKnjh11WgXCVppK0KpL+SAeiUn3PBeKp3/Wl3om0cmp8XPmRBKJTpv5o1aBhUv
         wI6RcBXUTtoyE7xrwaQZniMJ1VEzvf3YwRGXJPaRVUmC+kwYxNPqjtCc6+HL3wF18sXK
         hoaFd1jbv1rLeiqbxRhMuopgky0z5E6k2NUjk5xMz7mzRLuUMBVNa37Qemh5n1BEgXuD
         s4W/RFG+Tsqstu2kcp1m7HOOhwd9qCYmHPkpOnTeW1qHPOUSRdJvGxj4kkSvfNI6cz0B
         QBkA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of intel-gvt-dev-bounces@lists.freedesktop.org designates 131.252.210.177 as permitted sender) smtp.mailfrom=intel-gvt-dev-bounces@lists.freedesktop.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Return-Path: <intel-gvt-dev-bounces@lists.freedesktop.org>
Received: from gabe.freedesktop.org (gabe.freedesktop.org. [131.252.210.177])
        by mx.google.com with ESMTPS id p64si15704478pfa.94.2019.02.18.23.52.17
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 18 Feb 2019 23:52:17 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of intel-gvt-dev-bounces@lists.freedesktop.org designates 131.252.210.177 as permitted sender) client-ip=131.252.210.177;
Authentication-Results: mx.google.com;
       spf=pass (google.com: best guess record for domain of intel-gvt-dev-bounces@lists.freedesktop.org designates 131.252.210.177 as permitted sender) smtp.mailfrom=intel-gvt-dev-bounces@lists.freedesktop.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 23CEC88FAD;
	Tue, 19 Feb 2019 07:52:17 +0000 (UTC)
X-Original-To: intel-gvt-dev@lists.freedesktop.org
Delivered-To: intel-gvt-dev@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C96E889259
 for <intel-gvt-dev@lists.freedesktop.org>;
 Tue, 19 Feb 2019 07:52:15 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 18 Feb 2019 23:52:14 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.58,387,1544515200"; d="scan'208";a="147958539"
Received: from joy-optiplex-7040.sh.intel.com ([10.239.13.9])
 by fmsmga001.fm.intel.com with ESMTP; 18 Feb 2019 23:52:12 -0800
From: Yan Zhao <yan.y.zhao@intel.com>
To: intel-gvt-dev@lists.freedesktop.org,
	alex.williamson@redhat.com
Subject: [PATCH 8/8] drm/i915/gvt: VFIO device states interfaces
Date: Tue, 19 Feb 2019 02:46:56 -0500
Message-Id: <20190219074656.14395-1-yan.y.zhao@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190219074242.14015-1-yan.y.zhao@intel.com>
References: <20190219074242.14015-1-yan.y.zhao@intel.com>
X-BeenThere: intel-gvt-dev@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: "Intel GVT \(Graphics Virtualization\) development list"
 <intel-gvt-dev.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gvt-dev>
List-Post: <mailto:intel-gvt-dev@lists.freedesktop.org>
List-Help: <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gvt-dev>, 
 <mailto:intel-gvt-dev-request@lists.freedesktop.org?subject=subscribe>
Cc: Yulei Zhang <yulei.zhang@intel.com>, Kevin Tian <kevin.tian@intel.com>,
 Yan Zhao <yan.y.zhao@intel.com>, linux-kernel@vger.kernel.org,
 kvm@vger.kernel.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gvt-dev-bounces@lists.freedesktop.org
Sender: "intel-gvt-dev" <intel-gvt-dev-bounces@lists.freedesktop.org>

VGhpcyBwYXRjaCByZWdpc3RlcnMgMyBWRklPIGRldmljZSBzdGF0ZSByZWdpb25lcyBvZiB0eXBl
ClZGSU9fUkVHSU9OX1RZUEVfREVWSUNFX1NUQVRFLCBhbmQgc3VidHlwZQpWRklPX1JFR0lPTl9T
VUJUWVBFX0RFVklDRV9TVEFURV9DVEwsClZGSU9fUkVHSU9OX1NVQlRZUEVfREVWSUNFX1NUQVRF
X0RBVEFfQ09ORklHLApWRklPX1JFR0lPTl9TVUJUWVBFX0RFVklDRV9TVEFURV9EQVRBX0RJUlRZ
QklUTUFQLgoKdXNlcnNwYWNlIFZGSU8gd2lsbCBjaGVjayB0aGUgZXhpc3RlbmNlIG9mIHRob3Nl
IHJlZ2lvbnMgdG8gZ2V0L3NldAp2R1BVJ3MgZGV2aWNlIHN0YXRlcy4KCnJlZ2lvbiBvZiBzdWJ0
eXBlIFZGSU9fUkVHSU9OX1NVQlRZUEVfREVWSUNFX1NUQVRFX0NUTCBpcyB0aGUgY29udHJvbApy
ZWdpb24sIGl0cyBsYXlvdXQgaXMgZGVmaW5lZCBpbiBzdHJ1Y3QgdmZpb19kZXZpY2Vfc3RhdGVf
Y3RsLgpSZWFkaW5nIGZyb20gdXNlcnNwYWNlIGludG8gdGhpcyByZWdpb24gd2lsbCBnZXQgZGV2
aWNlIHN0YXRlIGludGVyYWNlJ3MKdmVyc2lvbiBhbmQgZGV2aWNlIGRhdGEgY2Fwcy4KCkFzIElu
dGVsIHZHUFUgZG9lcyBub3QgaGF2ZSBkZXZpY2UgbWVtb3J5LCBzbyBpdCBkb2VzIG5vdCBzdXBw
b3J0IGNhcApWRklPX0RFVklDRV9EQVRBX0NBUF9ERVZJQ0VfTUVNT1JZLgoKQnV0IEludGVsIHZH
UFUgd2lsbCBwcm9kdWNlIGRpcnR5IHBhZ2UgaW4gc3lzdGVtIG1lbW9yeSwgY2FwClZGSU9fREVW
SUNFX0RBVEFfQ0FQX1NZU1RFTV9NRU1PUlkgaXMgcmVwb3J0ZWQuCgp0aHJvdWdoIHdyaXRpbmcg
dG8gdGhlIGNvbnRyb2wgcmVnaW9uLCB2R1BVJ3Mgc3RhdGUgY2FuIGFsc28gYmUgc2V0IHRvCm9u
ZSBvZiBWRklPX0RFVklDRV9TVEFURV9SVU5OSU5HLCBWRklPX0RFVklDRV9TVEFURV9TVE9QLApW
RklPX0RFVklDRV9TVEFURV9SVU5OSU5HICYgVkZJT19ERVZJQ0VfU1RBVEVfTE9HR0lORywKVkZJ
T19ERVZJQ0VfU1RBVEVfU1RPUCAmIFZGSU9fREVWSUNFX1NUQVRFX0xPR0dJTkcuCnN0YXRlIFZG
SU9fREVWSUNFX1NUQVRFX0xPR0dJTkcgaXMgc2V0IHRvIG5vdGlmeSBsb2dnaW5nIGRpcnR5IHBh
Z2UgaW4Kc3lzdGVtIG1lbW9yeSwgYnV0IHNpbmNlIHZHUFUncyBkaXJ0eSBwYWdlIGxvZ2dpbmcg
bm93IGlzIGltcGxlbWVudGVkIGJ5CmNhY2hlIG9mIGRtYSBwYWdlcyBmb3IgZ3Vlc3QgZ2ZucyBp
biB2Z2d0dCBhbmQgcHBndHQsCm5vdGhpbmcgc3BlY2lhbCBuZWVkcyB0byBiZSBkb25lIGluIHRo
ZSB0d28gTE9HR0lORyBzdGF0ZXMsIGxpa2UKc3RhcnQvc3RvcCBsb2dnaW5nIHRocmVhZHMuLi4K
CnZHUFUncyBkZXZpY2UgY29uZmlnIGRhdGEgKGluY2x1ZGluZyB2cmVnLCB2Z2d0dCwgdmNmZyBz
cGFjZSwgd29ya2xvYWRzLApwcGd0dCwgZXhlY2xpc3QsIHdoaWNoIGFyZSBzYXZlZC9yZXN0b3Jl
ZCB0aHJvdWdoIGd2dCBpbnRlcmZhY2UKaW50ZWxfZ3Z0X3NhdmVfcmVzdG9yZSkgaXMgaG9sZCBp
biByZWdpb24gb2Ygc3VidHlwZQpWRklPX1JFR0lPTl9TVUJUWVBFX0RFVklDRV9TVEFURV9EQVRB
X0NPTkZJRy4KVGhpcyByZWdpb24gaXMgbW1hcGVkIGludG8gdXNlcnNwYWNlIFZGSU8uCgpUaGVy
ZWZvcmUgdXNlcnNwYWNlIFZGSU8ncyByZWFkaW5nIGZyb20gdGhpcyBjb25maWcgZGF0YQpyZWdp
b24gcmVxdWlyZXMgaXQgZmlyc3Qgd3JpdGUgR0VUX0JVRkZFUiB0byBkZXZpY2VfY29uZmlnLmFj
dGlvbiBpbiB0aGUKYWJvdmUgY29udHJvbCByZWdpb24sIHNvIHRoYXQgR1ZUIGNhbiBsb2FkIGNv
bmZpZyBkYXRhIG9mIHZHUFUgaW50bwpjb25maWcgZGF0YSByZWdpb24gZmlyc3Q7CkFuZCBhZnRl
ciB1c2Vyc3BhY2UgVkZJTydzIHdyaXRpbmcgdG8gY29uZmlnIGRhdGEgcmVnaW9uLCBTRVRfQlVG
RkVSCmlzIGFsc28gbmVlZGVkIHRvIHdyaXRlIHRvIGRldmljZV9jb25maWcuYWN0aW9uIGluIGNv
bnRyb2wgcmVnaW9uLCBzbwpHVlQgY2FuIHJlc3RvcmUgY29uZmlnIGRhdGEgaW50byB2R1BVLgoo
QWxzbywgaWYgZGV2aWNlIGNvbmZpZyBkYXRhIHJlZ2lvbiBmYWlsZWQgdG8gYmUgbW1hcGVkIGlu
dG8gdXNlcnNwYWNlClZGSU8sIHJlYWQvd3JpdGUgaGFuZGxlcnMgYXJlIGFsc28gcHJvdmlkZWQp
LgoKdkdQVSdzIHJlZ2lvbiBmb3IgZGlydHkgYml0bWFwIGxvZ2dpbmcgaW4gc3lzdGVtIG1lbW9y
eSBpcyBvZiBzdWJ0eXBlClZGSU9fUkVHSU9OX1NVQlRZUEVfREVWSUNFX1NUQVRFX0RBVEFfRElS
VFlCSVRNQVAuIEl0J3MgYWxzbyBtbWFwZWQgaW50bwp1c2Vyc3BhY2UgVkZJTy4gQnkgd3JpdGlu
ZyBzdGFydF9hZGRyIGFuZCBwYWdlIGNvdW50IG9mIGEgcmFuZ2Ugb2YKc3lzdGVtIG1lbW9yeSwg
ZGlydHkgcGFnZXMnIGJpdG1hcCBwcm9kdWNlZCBieSB2R1BVIGlzIHNhdmVkIGluIHRoaXMKcmVn
aW9uIGRpcnR5IGJpdG1hcC4gVXNlcnNwYWNlIFZGSU8gY2FuIGRpcmVjdGx5IHJlYWQgZGlydHkg
Yml0bWFwIGZyb20KbW1hcGVkIHJlZ2lvbiBvciB0aHJvdWdoIHRoaXMgcmVnaW9uJ3MgcmVhZC93
cml0ZSBoYW5kbGVycy4KClNpZ25lZC1vZmYtYnk6IFlhbiBaaGFvIDx5YW4ueS56aGFvQGludGVs
LmNvbT4KU2lnbmVkLW9mZi1ieTogS2V2aW4gVGlhbiA8a2V2aW4udGlhbkBpbnRlbC5jb20+ClNp
Z25lZC1vZmYtYnk6IFl1bGVpIFpoYW5nIDx5dWxlaS56aGFuZ0BpbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2d2dC5oICAgfCAgIDMgKwogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Z0L2t2bWd0LmMgfCA0MTIgKysrKysrKysrKysrKysrKysrKysrKysrKysrKystLQogaW5j
bHVkZS91YXBpL2xpbnV4L3ZmaW8uaCAgICAgICAgfCAgMzggKysrCiAzIGZpbGVzIGNoYW5nZWQs
IDQzNyBpbnNlcnRpb25zKCspLCAxNiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmgK
aW5kZXggY2ZkZTUxMGU5ZDc3Li5iMDU4MDE2OWY1OTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d2dC9ndnQuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZ3Z0LmgK
QEAgLTIyNyw2ICsyMjcsOSBAQCBzdHJ1Y3QgaW50ZWxfdmdwdSB7CiAJCXN0cnVjdCB3b3JrX3N0
cnVjdCByZWxlYXNlX3dvcms7CiAJCWF0b21pY190IHJlbGVhc2VkOwogCQlzdHJ1Y3QgdmZpb19k
ZXZpY2UgKnZmaW9fZGV2aWNlOworCQlzdHJ1Y3QgdmZpb19kZXZpY2Vfc3RhdGVfY3RsICpzdGF0
ZV9jdGw7CisJCXZvaWQgKnN0YXRlX2NvbmZpZzsKKwkJdm9pZCAqc3RhdGVfYml0bWFwOwogCX0g
dmRldjsKICNlbmRpZgogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3Zt
Z3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9rdm1ndC5jCmluZGV4IDIyM2M2N2U4NzY4
MC4uMDJkZjJlYmFhM2Y0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3Zt
Z3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQva3ZtZ3QuYwpAQCAtNjUsNiArNjUs
OCBAQCBzdHJ1Y3QgaW50ZWxfdmdwdV9yZWdvcHMgewogCQkJc2l6ZV90IGNvdW50LCBsb2ZmX3Qg
KnBwb3MsIGJvb2wgaXN3cml0ZSk7CiAJdm9pZCAoKnJlbGVhc2UpKHN0cnVjdCBpbnRlbF92Z3B1
ICp2Z3B1LAogCQkJc3RydWN0IHZmaW9fcmVnaW9uICpyZWdpb24pOworCWludCAoKm1tYXApKHN0
cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAorCQkJc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpOwog
fTsKIAogc3RydWN0IHZmaW9fcmVnaW9uIHsKQEAgLTQxNCw3ICs0MTYsNyBAQCBzdGF0aWMgc2l6
ZV90IGludGVsX3ZncHVfcmVnX3J3X29wcmVnaW9uKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCBj
aGFyICpidWYsCiAJY291bnQgPSBtaW4oY291bnQsIChzaXplX3QpKHZncHUtPnZkZXYucmVnaW9u
W2ldLnNpemUgLSBwb3MpKTsKIAltZW1jcHkoYnVmLCBiYXNlICsgcG9zLCBjb3VudCk7CiAKLQly
ZXR1cm4gY291bnQ7CisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyB2b2lkIGludGVsX3ZncHVfcmVn
X3JlbGVhc2Vfb3ByZWdpb24oc3RydWN0IGludGVsX3ZncHUgKnZncHUsCkBAIC00MjcsNiArNDI5
LDI3MiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX3ZncHVfcmVnb3BzIGludGVsX3ZncHVf
cmVnb3BzX29wcmVnaW9uID0gewogCS5yZWxlYXNlID0gaW50ZWxfdmdwdV9yZWdfcmVsZWFzZV9v
cHJlZ2lvbiwKIH07CiAKK3N0YXRpYyBzaXplX3Qgc2V0X2RldmljZV9zdGF0ZShzdHJ1Y3QgaW50
ZWxfdmdwdSAqdmdwdSwgdTMyIHN0YXRlKQoreworCWludCByYyA9IDA7CisKKwlzd2l0Y2ggKHN0
YXRlKSB7CisJY2FzZSBWRklPX0RFVklDRV9TVEFURV9TVE9QOgorCQlpbnRlbF9ndnRfb3BzLT52
Z3B1X2RlYWN0aXZhdGUodmdwdSk7CisJCWJyZWFrOworCWNhc2UgVkZJT19ERVZJQ0VfU1RBVEVf
UlVOTklORzoKKwkJaW50ZWxfZ3Z0X29wcy0+dmdwdV9hY3RpdmF0ZSh2Z3B1KTsKKwkJYnJlYWs7
CisJY2FzZSBWRklPX0RFVklDRV9TVEFURV9MT0dHSU5HIHwgVkZJT19ERVZJQ0VfU1RBVEVfUlVO
TklORzoKKwljYXNlIFZGSU9fREVWSUNFX1NUQVRFX0xPR0dJTkcgfCBWRklPX0RFVklDRV9TVEFU
RV9TVE9QOgorCQlicmVhazsKKwlkZWZhdWx0OgorCQlyYyA9IC1FRkFVTFQ7CisJfQorCisJcmV0
dXJuIHJjOworfQorCitzdGF0aWMgdm9pZCBpbnRlbF92Z3B1X2dldF9kaXJ0eV9iaXRtYXAoc3Ry
dWN0IGludGVsX3ZncHUgKnZncHUsCisJCXU2NCBzdGFydF9hZGRyLCB1NjQgbnBhZ2UsIHZvaWQg
KmJpdG1hcCkKK3sKKwl1NjQgZ2ZuID0gc3RhcnRfYWRkciA+PiBQQUdFX1NISUZUOworCWludCBp
OworCisJbWVtc2V0KGJpdG1hcCwgMCwgTUlHUkFUSU9OX0RJUlRZX0JJVE1BUF9TSVpFKTsKKwor
CWZvciAoaSA9IDA7IGkgPCBucGFnZTsgaSsrKSB7CisJCW11dGV4X2xvY2soJnZncHUtPnZkZXYu
Y2FjaGVfbG9jayk7CisJCWlmIChfX2d2dF9jYWNoZV9maW5kX2dmbih2Z3B1LCBnZm4pKQorCQkJ
c2V0X2JpdChpLCBiaXRtYXApOworCisJCW11dGV4X3VubG9jaygmdmdwdS0+dmRldi5jYWNoZV9s
b2NrKTsKKwkJZ2ZuKys7CisJfQorfQorCitzdGF0aWMgc2l6ZV90IGludGVsX3ZncHVfcmVnX3J3
X3N0YXRlX2N0bChzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwKKwkJY2hhciAqYnVmLCBzaXplX3Qg
Y291bnQsIGxvZmZfdCAqcHBvcywgYm9vbCBpc3dyaXRlKQoreworCXN0cnVjdCB2ZmlvX2Rldmlj
ZV9zdGF0ZV9jdGwgKnN0YXRlX2N0bDsKKwlsb2ZmX3QgcG9zID0gKnBwb3MgJiBWRklPX1BDSV9P
RkZTRVRfTUFTSzsKKwl1bnNpZ25lZCBpbnQgaTsKKwlpbnQgcmMgPSAwOworCV9fdTY0IGxlbjsK
KworCXN0YXRlX2N0bCA9IHZncHUtPnZkZXYuc3RhdGVfY3RsOworCWlmICghc3RhdGVfY3RsKSB7
CisJCWd2dF92Z3B1X2VycigiaW52YWxpZCBydyBvZiBzdGF0ZSBjdGwgcmVnaW9uXG4iKTsKKwkJ
cmMgPSAtRUZBVUxUOworCQlnb3RvIGV4aXQ7CisJfQorCisJaSA9IFZGSU9fUENJX09GRlNFVF9U
T19JTkRFWCgqcHBvcykgLSBWRklPX1BDSV9OVU1fUkVHSU9OUzsKKwlpZiAocG9zID49IHZncHUt
PnZkZXYucmVnaW9uW2ldLnNpemUpIHsKKwkJZ3Z0X3ZncHVfZXJyKCJpbnZhbGlkIG9mZnNldCBm
b3IgSW50ZWwgdmdwdSBzdGF0ZSBjdGwgcmVnaW9uXG4iKTsKKwkJcmMgPSAtRUlOVkFMOworCQln
b3RvIGV4aXQ7CisJfQorCisjZGVmaW5lIENUTF9PRkZTRVQoeCkgb2Zmc2V0b2Yoc3RydWN0IHZm
aW9fZGV2aWNlX3N0YXRlX2N0bCwgeCkKKwlzd2l0Y2ggKHBvcykgeworCWNhc2UgQ1RMX09GRlNF
VCh2ZXJzaW9uKToKKwkJaWYgKCFpc3dyaXRlKQorCQkJcmMgPSBjb3B5X3RvX3VzZXIoYnVmLAor
CQkJCSZzdGF0ZV9jdGwtPnZlcnNpb24sCisJCQkJc2l6ZW9mKHN0YXRlX2N0bC0+dmVyc2lvbikp
OworCQlicmVhazsKKwljYXNlIENUTF9PRkZTRVQoZGV2aWNlX3N0YXRlKToKKwkJaWYgKCFpc3dy
aXRlKQorCQkJcmMgPSBjb3B5X3RvX3VzZXIoYnVmLAorCQkJCSZzdGF0ZV9jdGwtPmRldmljZV9z
dGF0ZSwKKwkJCQlzaXplb2Yoc3RhdGVfY3RsLT5kZXZpY2Vfc3RhdGUpKTsKKwkJZWxzZSB7CisJ
CQl1MzIgc3RhdGU7CisKKwkJCWlmIChjb3B5X2Zyb21fdXNlcigmc3RhdGUsIGJ1Ziwgc2l6ZW9m
KHN0YXRlKSkpIHsKKwkJCQlyYyA9IC1FRkFVTFQ7CisJCQkJZ290byBleGl0OworCQkJfQorCQkJ
c2V0X2RldmljZV9zdGF0ZSh2Z3B1LCBzdGF0ZSk7CisJCX0KKwkJYnJlYWs7CisJY2FzZSBDVExf
T0ZGU0VUKGNhcHMpOgorCQlpZiAoIWlzd3JpdGUpCisJCQlyYyA9IGNvcHlfdG9fdXNlcihidWYs
CisJCQkJJnN0YXRlX2N0bC0+Y2FwcywKKwkJCQlzaXplb2Yoc3RhdGVfY3RsLT5jYXBzKSk7CisJ
CWJyZWFrOworCWNhc2UgQ1RMX09GRlNFVChkZXZpY2VfY29uZmlnLmFjdGlvbik6CisJCWlmIChp
c3dyaXRlKSB7CisJCQl1MzIgYWN0aW9uOworCQkJYm9vbCBpc3NldDsKKworCQkJaWYgKGNvcHlf
ZnJvbV91c2VyKCZhY3Rpb24sIGJ1Ziwgc2l6ZW9mKGFjdGlvbikpKSB7CisJCQkJcmMgPSAtRUZB
VUxUOworCQkJCWdvdG8gZXhpdDsKKwkJCX0KKwkJCWlzc2V0ID0gKGFjdGlvbiA9PQorCQkJCVZG
SU9fREVWSUNFX0RBVEFfQUNUSU9OX1NFVF9CVUZGRVIpOworCQkJcmMgPSBpbnRlbF9ndnRfb3Bz
LT52Z3B1X3NhdmVfcmVzdG9yZSh2Z3B1LAorCQkJCQlOVUxMLAorCQkJCQlNSUdSQVRJT05fSU1H
X01BWF9TSVpFLAorCQkJCQl2Z3B1LT52ZGV2LnN0YXRlX2NvbmZpZywKKwkJCQkJMCwKKwkJCQkJ
aXNzZXQpOworCQl9IGVsc2UgeworCQkJLyogYWN0aW9uIHJlYWQgaXMgbm90IHZhbGlkICovCisJ
CQlyYyA9IC1FSU5WQUw7CisJCX0KKwkJYnJlYWs7CisJY2FzZSBDVExfT0ZGU0VUKGRldmljZV9j
b25maWcuc2l6ZSk6CisJCWxlbiA9IE1JR1JBVElPTl9JTUdfTUFYX1NJWkU7CisJCWlmICghaXN3
cml0ZSkKKwkJCXJjID0gY29weV90b191c2VyKGJ1ZiwgJmxlbiwgc2l6ZW9mKGxlbikpOworCQli
cmVhazsKKwljYXNlIENUTF9PRkZTRVQoc3lzdGVtX21lbW9yeSk6CisJCXsKKwkJCXN0cnVjdCB7
CisJCQkJX191NjQgc3RhcnRfYWRkcjsKKwkJCQlfX3U2NCBwYWdlX25yOworCQkJfSBzeXN0ZW1f
bWVtb3J5OworCisJCQl2b2lkICpiaXRtYXAgPSB2Z3B1LT52ZGV2LnN0YXRlX2JpdG1hcDsKKwor
CQkJaWYgKGNvdW50ICE9IHNpemVvZihzeXN0ZW1fbWVtb3J5KSkgeworCQkJCS8qIG11c3Qgd3Jp
dGUgYXMgYSB3aG9sZSAqLworCQkJCXJjID0gLUVJTlZBTDsKKwkJCQlnb3RvIGV4aXQ7CisJCQl9
CisJCQlpZiAoIWlzd3JpdGUpIHsKKwkJCQkvKiBhY3Rpb24gcmVhZCBpcyBub3QgdmFsaWQgKi8K
KwkJCQlyYyA9IC1FSU5WQUw7CisJCQkJZ290byBleGl0OworCQkJfQorCQkJaWYgKGNvcHlfZnJv
bV91c2VyKCZzeXN0ZW1fbWVtb3J5LCBidWYsCisJCQkJCQlzaXplb2Yoc3lzdGVtX21lbW9yeSkp
KSB7CisJCQkJcmMgPSAtRUZBVUxUOworCQkJCWdvdG8gZXhpdDsKKwkJCX0KKwkJCWludGVsX3Zn
cHVfZ2V0X2RpcnR5X2JpdG1hcCh2Z3B1LAorCQkJCXN5c3RlbV9tZW1vcnkuc3RhcnRfYWRkciwK
KwkJCQlzeXN0ZW1fbWVtb3J5LnBhZ2VfbnIsIGJpdG1hcCk7CisJCX0KKwkJYnJlYWs7CisJZGVm
YXVsdDoKKwkJYnJlYWs7CisJfQorZXhpdDoKKwlyZXR1cm4gcmM7Cit9CisKK3N0YXRpYyB2b2lk
IGludGVsX3ZncHVfcmVnX3JlbGVhc2Vfc3RhdGVfY3RsKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1
LAorCQlzdHJ1Y3QgdmZpb19yZWdpb24gKnJlZ2lvbikKK3sKKwl2ZnJlZShyZWdpb24tPmRhdGEp
OworfQorCitzdGF0aWMgc2l6ZV90IGludGVsX3ZncHVfcmVnX3J3X3N0YXRlX2RhdGFfY29uZmln
KHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAorCQljaGFyICpidWYsIHNpemVfdCBjb3VudCwgbG9m
Zl90ICpwcG9zLCBib29sIGlzd3JpdGUpCit7CisJbG9mZl90IHBvcyA9ICpwcG9zICYgVkZJT19Q
Q0lfT0ZGU0VUX01BU0s7CisJdW5zaWduZWQgaW50IGkgPSBWRklPX1BDSV9PRkZTRVRfVE9fSU5E
RVgoKnBwb3MpIC0gVkZJT19QQ0lfTlVNX1JFR0lPTlM7CisJdm9pZCAqYmFzZSA9IHZncHUtPnZk
ZXYucmVnaW9uW2ldLmRhdGE7CisJaW50IHJjID0gMDsKKworCWlmIChwb3MgPj0gdmdwdS0+dmRl
di5yZWdpb25baV0uc2l6ZSkgeworCQlndnRfdmdwdV9lcnIoImludmFsaWQgb2Zmc2V0IHRvIHJ3
IEludGVsIHZncHUgc3RhdGUgZGF0YSByZWdpb25cbiIpOworCQlyYyA9IC1FSU5WQUw7CisJCWdv
dG8gZXhpdDsKKwl9CisKKwlpZiAoaXN3cml0ZSkgeworCQlpZiAoY29weV9mcm9tX3VzZXIoYmFz
ZSArIHBvcywgYnVmLCBjb3VudCkpCisJCQlyYyA9IC1FRkFVTFQ7CisJfSBlbHNlIHsKKwkJaWYg
KGNvcHlfdG9fdXNlcihidWYsIGJhc2UgKyBwb3MsIGNvdW50KSkKKwkJCXJjID0gLUVGQVVMVDsK
Kwl9CisKK2V4aXQ6CisJcmV0dXJuIHJjOworfQorCitzdGF0aWMKK3ZvaWQgaW50ZWxfdmdwdV9y
ZWdfcmVsZWFzZV9zdGF0ZV9kYXRhX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwKKwkJ
c3RydWN0IHZmaW9fcmVnaW9uICpyZWdpb24pCit7CisJdmZyZWUocmVnaW9uLT5kYXRhKTsKK30K
Kworc3RhdGljCitpbnQgaW50ZWxfdmdwdV9yZWdfbW1hcF9zdGF0ZV9kYXRhX2NvbmZpZyhzdHJ1
Y3QgaW50ZWxfdmdwdSAqdmdwdSwKKwkJCXN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQorewor
CXVuc2lnbmVkIGxvbmcgcGdvZmYgPSAwOworCXZvaWQgKmJhc2UgPSB2Z3B1LT52ZGV2LnN0YXRl
X2NvbmZpZzsKKworCXBnb2ZmID0gdm1hLT52bV9wZ29mZiAmCisJCSgoMVUgPDwgKFZGSU9fUENJ
X09GRlNFVF9TSElGVCAtIFBBR0VfU0hJRlQpKSAtIDEpOworCisJaWYgKHBnb2ZmICE9IDApCisJ
CXJldHVybiAtRUlOVkFMOworCisJcmV0dXJuIHJlbWFwX3ZtYWxsb2NfcmFuZ2Uodm1hLCBiYXNl
LCAwKTsKK30KKworc3RhdGljIHNpemVfdCBpbnRlbF92Z3B1X3JlZ19yd19zdGF0ZV9iaXRtYXAo
c3RydWN0IGludGVsX3ZncHUgKnZncHUsCisJCWNoYXIgKmJ1Ziwgc2l6ZV90IGNvdW50LCBsb2Zm
X3QgKnBwb3MsIGJvb2wgaXN3cml0ZSkKK3sKKwlsb2ZmX3QgcG9zID0gKnBwb3MgJiBWRklPX1BD
SV9PRkZTRVRfTUFTSzsKKwl1bnNpZ25lZCBpbnQgaSA9IFZGSU9fUENJX09GRlNFVF9UT19JTkRF
WCgqcHBvcykgLQorCQkJVkZJT19QQ0lfTlVNX1JFR0lPTlM7CisJdm9pZCAqYmFzZSA9IHZncHUt
PnZkZXYucmVnaW9uW2ldLmRhdGE7CisJaW50IHJjID0gMDsKKworCWlmIChpc3dyaXRlIHx8IHBv
cyAhPSAwKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmIChjb3B5X3RvX3VzZXIoYnVmLCBiYXNl
LCBjb3VudCkpCisJCXJjID0gLUVGQVVMVDsKKworCXJldHVybiAwOworfQorCitzdGF0aWMKK3Zv
aWQgaW50ZWxfdmdwdV9yZWdfcmVsZWFzZV9zdGF0ZV9iaXRtYXAoc3RydWN0IGludGVsX3ZncHUg
KnZncHUsCisJCXN0cnVjdCB2ZmlvX3JlZ2lvbiAqcmVnaW9uKQoreworCXZmcmVlKHJlZ2lvbi0+
ZGF0YSk7Cit9CisKK3N0YXRpYyBpbnQgaW50ZWxfdmdwdV9yZWdfbW1hcF9zdGF0ZV9iaXRtYXAo
c3RydWN0IGludGVsX3ZncHUgKnZncHUsCisJCQlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkK
K3sKKwl1bnNpZ25lZCBsb25nIHBnb2ZmID0gMDsKKwl2b2lkICpiYXNlID0gdmdwdS0+dmRldi5z
dGF0ZV9iaXRtYXA7CisKKwlwZ29mZiA9IHZtYS0+dm1fcGdvZmYgJgorCQkoKDFVIDw8IChWRklP
X1BDSV9PRkZTRVRfU0hJRlQgLSBQQUdFX1NISUZUKSkgLSAxKTsKKworCWlmIChwZ29mZiAhPSAw
KQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXJldHVybiByZW1hcF92bWFsbG9jX3JhbmdlKHZtYSwg
YmFzZSwgMCk7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfdmdwdV9yZWdvcHMgaW50
ZWxfdmdwdV9yZWdvcHNfc3RhdGVfY3RsID0geworCS5ydwkgPSBpbnRlbF92Z3B1X3JlZ19yd19z
dGF0ZV9jdGwsCisJLnJlbGVhc2UgPSBpbnRlbF92Z3B1X3JlZ19yZWxlYXNlX3N0YXRlX2N0bCwK
K307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfdmdwdV9yZWdvcHMgaW50ZWxfdmdwdV9y
ZWdvcHNfc3RhdGVfZGF0YV9jb25maWcgPSB7CisJLnJ3CSA9IGludGVsX3ZncHVfcmVnX3J3X3N0
YXRlX2RhdGFfY29uZmlnLAorCS5yZWxlYXNlID0gaW50ZWxfdmdwdV9yZWdfcmVsZWFzZV9zdGF0
ZV9kYXRhX2NvbmZpZywKKwkubW1hcCAgICA9IGludGVsX3ZncHVfcmVnX21tYXBfc3RhdGVfZGF0
YV9jb25maWcsCit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX3ZncHVfcmVnb3BzIGlu
dGVsX3ZncHVfcmVnb3BzX3N0YXRlX2JpdG1hcCA9IHsKKwkucncJID0gaW50ZWxfdmdwdV9yZWdf
cndfc3RhdGVfYml0bWFwLAorCS5yZWxlYXNlID0gaW50ZWxfdmdwdV9yZWdfcmVsZWFzZV9zdGF0
ZV9iaXRtYXAsCisJLm1tYXAgICAgPSBpbnRlbF92Z3B1X3JlZ19tbWFwX3N0YXRlX2JpdG1hcCwK
K307CisKIHN0YXRpYyBpbnQgaW50ZWxfdmdwdV9yZWdpc3Rlcl9yZWcoc3RydWN0IGludGVsX3Zn
cHUgKnZncHUsCiAJCXVuc2lnbmVkIGludCB0eXBlLCB1bnNpZ25lZCBpbnQgc3VidHlwZSwKIAkJ
Y29uc3Qgc3RydWN0IGludGVsX3ZncHVfcmVnb3BzICpvcHMsCkBAIC00OTMsNiArNzYxLDgyIEBA
IHN0YXRpYyBpbnQga3ZtZ3Rfc2V0X29wcmVnaW9uKHZvaWQgKnBfdmdwdSkKIAlyZXR1cm4gcmV0
OwogfQogCitzdGF0aWMgaW50IGt2bWd0X2luaXRfZGV2aWNlX3N0YXRlKHN0cnVjdCBpbnRlbF92
Z3B1ICp2Z3B1KQoreworCXZvaWQgKmJpdG1hcF9iYXNlLCAqY29uZmlnX2Jhc2U7CisJaW50IHJl
dDsKKwlzdHJ1Y3QgdmZpb19kZXZpY2Vfc3RhdGVfY3RsICpzdGF0ZV9jdGw7CisKKwlzdGF0ZV9j
dGwgPSB2emFsbG9jKHNpemVvZihzdHJ1Y3QgdmZpb19kZXZpY2Vfc3RhdGVfY3RsKSk7CisJaWYg
KCFzdGF0ZV9jdGwpIHsKKwkJcmV0ID0gLUVOT01FTTsKKwkJZ290byBvdXQ7CisJfQorCisJc3Rh
dGVfY3RsLT52ZXJzaW9uID0gVkZJT19ERVZJQ0VfU1RBVEVfSU5URVJGQUNFX1ZFUlNJT047CisJ
c3RhdGVfY3RsLT5jYXBzID0gVkZJT19ERVZJQ0VfREFUQV9DQVBfU1lTVEVNX01FTU9SWTsKKwor
CXJldCA9IGludGVsX3ZncHVfcmVnaXN0ZXJfcmVnKHZncHUsCisJCQlWRklPX1JFR0lPTl9UWVBF
X0RFVklDRV9TVEFURSwKKwkJCVZGSU9fUkVHSU9OX1NVQlRZUEVfREVWSUNFX1NUQVRFX0NUTCwK
KwkJCSZpbnRlbF92Z3B1X3JlZ29wc19zdGF0ZV9jdGwsCisJCQlzaXplb2Yoc3RydWN0IHZmaW9f
ZGV2aWNlX3N0YXRlX2N0bCksCisJCQlWRklPX1JFR0lPTl9JTkZPX0ZMQUdfUkVBRCB8CisJCQlW
RklPX1JFR0lPTl9JTkZPX0ZMQUdfV1JJVEUsCisJCQlzdGF0ZV9jdGwpOworCWlmIChyZXQpIHsK
KwkJdmZyZWUoc3RhdGVfY3RsKTsKKwkJZ290byBvdXQ7CisJfQorCXZncHUtPnZkZXYuc3RhdGVf
Y3RsID0gc3RhdGVfY3RsOworCisJY29uZmlnX2Jhc2UgPSB2bWFsbG9jX3VzZXIoTUlHUkFUSU9O
X0lNR19NQVhfU0laRSk7CisJaWYgKGNvbmZpZ19iYXNlID09IE5VTEwpIHsKKwkJcmV0ID0gLUVO
T01FTTsKKwkJZ290byBvdXQ7CisJfQorCXJldCA9IGludGVsX3ZncHVfcmVnaXN0ZXJfcmVnKHZn
cHUsCisJCQlWRklPX1JFR0lPTl9UWVBFX0RFVklDRV9TVEFURSwKKwkJCVZGSU9fUkVHSU9OX1NV
QlRZUEVfREVWSUNFX1NUQVRFX0RBVEFfQ09ORklHLAorCQkJJmludGVsX3ZncHVfcmVnb3BzX3N0
YXRlX2RhdGFfY29uZmlnLAorCQkJTUlHUkFUSU9OX0lNR19NQVhfU0laRSwKKwkJCVZGSU9fUkVH
SU9OX0lORk9fRkxBR19DQVBTIHwKKwkJCVZGSU9fUkVHSU9OX0lORk9fRkxBR19SRUFEIHwKKwkJ
CVZGSU9fUkVHSU9OX0lORk9fRkxBR19XUklURSB8CisJCQlWRklPX1JFR0lPTl9JTkZPX0ZMQUdf
TU1BUCwKKwkJCWNvbmZpZ19iYXNlKTsKKwlpZiAocmV0KSB7CisJCXZmcmVlKGNvbmZpZ19iYXNl
KTsKKwkJZ290byBvdXQ7CisJfQorCXZncHUtPnZkZXYuc3RhdGVfY29uZmlnID0gY29uZmlnX2Jh
c2U7CisKKworCWJpdG1hcF9iYXNlID0gdm1hbGxvY191c2VyKE1JR1JBVElPTl9ESVJUWV9CSVRN
QVBfU0laRSk7CisJaWYgKGJpdG1hcF9iYXNlID09IE5VTEwpIHsKKwkJcmV0ID0gLUVOT01FTTsK
KwkJZ290byBvdXQ7CisJfQorCXJldCA9IGludGVsX3ZncHVfcmVnaXN0ZXJfcmVnKHZncHUsCisJ
CQlWRklPX1JFR0lPTl9UWVBFX0RFVklDRV9TVEFURSwKKwkJCVZGSU9fUkVHSU9OX1NVQlRZUEVf
REVWSUNFX1NUQVRFX0RBVEFfRElSVFlCSVRNQVAsCisJCQkmaW50ZWxfdmdwdV9yZWdvcHNfc3Rh
dGVfYml0bWFwLAorCQkJTUlHUkFUSU9OX0RJUlRZX0JJVE1BUF9TSVpFLAorCQkJVkZJT19SRUdJ
T05fSU5GT19GTEFHX0NBUFMgfAorCQkJVkZJT19SRUdJT05fSU5GT19GTEFHX1JFQUQgfAorCQkJ
VkZJT19SRUdJT05fSU5GT19GTEFHX1dSSVRFIHwKKwkJCVZGSU9fUkVHSU9OX0lORk9fRkxBR19N
TUFQLAorCQkJYml0bWFwX2Jhc2UpOworCWlmIChyZXQpIHsKKwkJdmZyZWUoYml0bWFwX2Jhc2Up
OworCQlnb3RvIG91dDsKKwl9CisJdmdwdS0+dmRldi5zdGF0ZV9iaXRtYXAgPSBiaXRtYXBfYmFz
ZTsKKworb3V0OgorCXJldHVybiByZXQ7Cit9CisKIHN0YXRpYyB2b2lkIGt2bWd0X3B1dF92Zmlv
X2RldmljZSh2b2lkICp2Z3B1KQogewogCWlmIChXQVJOX09OKCEoKHN0cnVjdCBpbnRlbF92Z3B1
ICopdmdwdSktPnZkZXYudmZpb19kZXZpY2UpKQpAQCAtNjMxLDYgKzk3NSw4IEBAIHN0YXRpYyBp
bnQgaW50ZWxfdmdwdV9vcGVuKHN0cnVjdCBtZGV2X2RldmljZSAqbWRldikKIAlpZiAocmV0KQog
CQlnb3RvIHVuZG9fZ3JvdXA7CiAKKwlrdm1ndF9pbml0X2RldmljZV9zdGF0ZSh2Z3B1KTsKKwog
CWludGVsX2d2dF9vcHMtPnZncHVfYWN0aXZhdGUodmdwdSk7CiAKIAlhdG9taWNfc2V0KCZ2Z3B1
LT52ZGV2LnJlbGVhc2VkLCAwKTsKQEAgLTY2Miw2ICsxMDA4LDcgQEAgc3RhdGljIHZvaWQgX19p
bnRlbF92Z3B1X3JlbGVhc2Uoc3RydWN0IGludGVsX3ZncHUgKnZncHUpCiB7CiAJc3RydWN0IGt2
bWd0X2d1ZXN0X2luZm8gKmluZm87CiAJaW50IHJldDsKKwlpbnQgaTsKIAogCWlmICghaGFuZGxl
X3ZhbGlkKHZncHUtPmhhbmRsZSkpCiAJCXJldHVybjsKQEAgLTY3MSw2ICsxMDE4LDEzIEBAIHN0
YXRpYyB2b2lkIF9faW50ZWxfdmdwdV9yZWxlYXNlKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQog
CiAJaW50ZWxfZ3Z0X29wcy0+dmdwdV9yZWxlYXNlKHZncHUpOwogCisJZm9yIChpID0gMDsgaSA8
IHZncHUtPnZkZXYubnVtX3JlZ2lvbnM7IGkrKykKKwkJdmdwdS0+dmRldi5yZWdpb25baV0ub3Bz
LT5yZWxlYXNlKHZncHUsICZ2Z3B1LT52ZGV2LnJlZ2lvbltpXSk7CisKKwl2Z3B1LT52ZGV2Lm51
bV9yZWdpb25zID0gMDsKKwlrZnJlZSh2Z3B1LT52ZGV2LnJlZ2lvbik7CisJdmdwdS0+dmRldi5y
ZWdpb24gPSBOVUxMOworCiAJcmV0ID0gdmZpb191bnJlZ2lzdGVyX25vdGlmaWVyKG1kZXZfZGV2
KHZncHUtPnZkZXYubWRldiksIFZGSU9fSU9NTVVfTk9USUZZLAogCQkJCQkmdmdwdS0+dmRldi5p
b21tdV9ub3RpZmllcik7CiAJV0FSTihyZXQsICJ2ZmlvX3VucmVnaXN0ZXJfbm90aWZpZXIgZm9y
IGlvbW11IGZhaWxlZDogJWRcbiIsIHJldCk7CkBAIC04MTYsMTEgKzExNzAsMTEgQEAgc3RhdGlj
IHNzaXplX3QgaW50ZWxfdmdwdV9ydyhzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIGNoYXIgKmJ1
ZiwKIAljYXNlIFZGSU9fUENJX1JPTV9SRUdJT05fSU5ERVg6CiAJCWJyZWFrOwogCWRlZmF1bHQ6
Ci0JCWlmIChpbmRleCA+PSBWRklPX1BDSV9OVU1fUkVHSU9OUyArIHZncHUtPnZkZXYubnVtX3Jl
Z2lvbnMpCisJCWlmIChpbmRleCA8IFZGSU9fUENJX05VTV9SRUdJT05TKQogCQkJcmV0dXJuIC1F
SU5WQUw7CiAKIAkJaW5kZXggLT0gVkZJT19QQ0lfTlVNX1JFR0lPTlM7Ci0JCXJldHVybiB2Z3B1
LT52ZGV2LnJlZ2lvbltpbmRleF0ub3BzLT5ydyh2Z3B1LCBidWYsIGNvdW50LAorCQlyZXQgPSB2
Z3B1LT52ZGV2LnJlZ2lvbltpbmRleF0ub3BzLT5ydyh2Z3B1LCBidWYsIGNvdW50LAogCQkJCXBw
b3MsIGlzX3dyaXRlKTsKIAl9CiAKQEAgLTg1MSw2ICsxMjA1LDEwIEBAIHN0YXRpYyBzc2l6ZV90
IGludGVsX3ZncHVfcmVhZChzdHJ1Y3QgbWRldl9kZXZpY2UgKm1kZXYsIGNoYXIgX191c2VyICpi
dWYsCiB7CiAJdW5zaWduZWQgaW50IGRvbmUgPSAwOwogCWludCByZXQ7CisJdW5zaWduZWQgaW50
IGluZGV4ID0gVkZJT19QQ0lfT0ZGU0VUX1RPX0lOREVYKCpwcG9zKTsKKworCWlmIChpbmRleCA+
PSBWRklPX1BDSV9OVU1fUkVHSU9OUykKKwkJcmV0dXJuIGludGVsX3ZncHVfcncobWRldiwgKGNo
YXIgKilidWYsIGNvdW50LCBwcG9zLCBmYWxzZSk7CiAKIAl3aGlsZSAoY291bnQpIHsKIAkJc2l6
ZV90IGZpbGxlZDsKQEAgLTkyNSw2ICsxMjgzLDEwIEBAIHN0YXRpYyBzc2l6ZV90IGludGVsX3Zn
cHVfd3JpdGUoc3RydWN0IG1kZXZfZGV2aWNlICptZGV2LAogewogCXVuc2lnbmVkIGludCBkb25l
ID0gMDsKIAlpbnQgcmV0OworCXVuc2lnbmVkIGludCBpbmRleCA9IFZGSU9fUENJX09GRlNFVF9U
T19JTkRFWCgqcHBvcyk7CisKKwlpZiAoaW5kZXggPj0gVkZJT19QQ0lfTlVNX1JFR0lPTlMpCisJ
CXJldHVybiBpbnRlbF92Z3B1X3J3KG1kZXYsIChjaGFyICopYnVmLCBjb3VudCwgcHBvcywgdHJ1
ZSk7CiAKIAl3aGlsZSAoY291bnQpIHsKIAkJc2l6ZV90IGZpbGxlZDsKQEAgLTk5OSwyNCArMTM2
MSw0MiBAQCBzdGF0aWMgaW50IGludGVsX3ZncHVfbW1hcChzdHJ1Y3QgbWRldl9kZXZpY2UgKm1k
ZXYsIHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQogCXVuc2lnbmVkIGxvbmcgcmVxX3NpemUs
IHBnb2ZmID0gMDsKIAlwZ3Byb3RfdCBwZ19wcm90OwogCXN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1
ID0gbWRldl9nZXRfZHJ2ZGF0YShtZGV2KTsKKwlpbnQgcmV0ID0gMDsKIAogCWluZGV4ID0gdm1h
LT52bV9wZ29mZiA+PiAoVkZJT19QQ0lfT0ZGU0VUX1NISUZUIC0gUEFHRV9TSElGVCk7Ci0JaWYg
KGluZGV4ID49IFZGSU9fUENJX1JPTV9SRUdJT05fSU5ERVgpCi0JCXJldHVybiAtRUlOVkFMOwog
Ci0JaWYgKHZtYS0+dm1fZW5kIDwgdm1hLT52bV9zdGFydCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0J
aWYgKCh2bWEtPnZtX2ZsYWdzICYgVk1fU0hBUkVEKSA9PSAwKQotCQlyZXR1cm4gLUVJTlZBTDsK
LQlpZiAoaW5kZXggIT0gVkZJT19QQ0lfQkFSMl9SRUdJT05fSU5ERVgpCi0JCXJldHVybiAtRUlO
VkFMOworCWlmICh2bWEtPnZtX2VuZCA8IHZtYS0+dm1fc3RhcnQpIHsKKwkJcmV0ID0gLUVJTlZB
TDsKKwkJZ290byBleGl0OworCX0KIAotCXBnX3Byb3QgPSB2bWEtPnZtX3BhZ2VfcHJvdDsKLQl2
aXJ0YWRkciA9IHZtYS0+dm1fc3RhcnQ7Ci0JcmVxX3NpemUgPSB2bWEtPnZtX2VuZCAtIHZtYS0+
dm1fc3RhcnQ7Ci0JcGdvZmYgPSB2Z3B1X2FwZXJ0dXJlX3BhX2Jhc2UodmdwdSkgPj4gUEFHRV9T
SElGVDsKKwlpZiAoKHZtYS0+dm1fZmxhZ3MgJiBWTV9TSEFSRUQpID09IDApIHsKKwkJcmV0ID0g
LUVJTlZBTDsKKwkJZ290byBleGl0OworCX0KKworCWlmIChpbmRleCA9PSBWRklPX1BDSV9CQVIy
X1JFR0lPTl9JTkRFWCkgeworCQlwZ19wcm90ID0gdm1hLT52bV9wYWdlX3Byb3Q7CisJCXZpcnRh
ZGRyID0gdm1hLT52bV9zdGFydDsKKwkJcmVxX3NpemUgPSB2bWEtPnZtX2VuZCAtIHZtYS0+dm1f
c3RhcnQ7CisJCXBnb2ZmID0gdmdwdV9hcGVydHVyZV9wYV9iYXNlKHZncHUpID4+IFBBR0VfU0hJ
RlQ7CisJCXJldCA9IHJlbWFwX3Bmbl9yYW5nZSh2bWEsIHZpcnRhZGRyLCBwZ29mZiwKKwkJCQly
ZXFfc2l6ZSwgcGdfcHJvdCk7CisJfSBlbHNlIGlmICgoaW5kZXggPj0gVkZJT19QQ0lfTlVNX1JF
R0lPTlMgKworCQkJdmdwdS0+dmRldi5udW1fcmVnaW9ucykgfHwKKwkJCWluZGV4IDwgVkZJT19Q
Q0lfTlVNX1JFR0lPTlMpIHsKKwkJcmV0ID0gLUVJTlZBTDsKKwl9IGVsc2UgeworCQlpbmRleCAt
PSBWRklPX1BDSV9OVU1fUkVHSU9OUzsKKwkJaWYgKHZncHUtPnZkZXYucmVnaW9uW2luZGV4XS5v
cHMtPm1tYXApCisJCQlyZXQgPSB2Z3B1LT52ZGV2LnJlZ2lvbltpbmRleF0ub3BzLT5tbWFwKHZn
cHUsCisJCQkJCXZtYSk7CisJCWVsc2UKKwkJCXJldCA9IC1FSU5WQUw7CisJfQorZXhpdDoKKwly
ZXR1cm4gcmV0OwogCi0JcmV0dXJuIHJlbWFwX3Bmbl9yYW5nZSh2bWEsIHZpcnRhZGRyLCBwZ29m
ZiwgcmVxX3NpemUsIHBnX3Byb3QpOwogfQogCiBzdGF0aWMgaW50IGludGVsX3ZncHVfZ2V0X2ly
cV9jb3VudChzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHR5cGUpCmRpZmYgLS1naXQgYS9p
bmNsdWRlL3VhcGkvbGludXgvdmZpby5oIGIvaW5jbHVkZS91YXBpL2xpbnV4L3ZmaW8uaAppbmRl
eCA4MTMxMDI4MTBmNTMuLmE1NzdiMjQyZTNiZCAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2xp
bnV4L3ZmaW8uaAorKysgYi9pbmNsdWRlL3VhcGkvbGludXgvdmZpby5oCkBAIC0zMDMsNiArMzAz
LDE0IEBAIHN0cnVjdCB2ZmlvX3JlZ2lvbl9pbmZvX2NhcF90eXBlIHsKICNkZWZpbmUgVkZJT19S
RUdJT05fU1VCVFlQRV9JTlRFTF9JR0RfSE9TVF9DRkcJKDIpCiAjZGVmaW5lIFZGSU9fUkVHSU9O
X1NVQlRZUEVfSU5URUxfSUdEX0xQQ19DRkcJKDMpCiAKKworLyogRGV2aWNlIFN0YXRlIHJlZ2lv
biB0eXBlIGFuZCBzdWItdHlwZSAqLworI2RlZmluZSBWRklPX1JFR0lPTl9UWVBFX0RFVklDRV9T
VEFURSAgICAgICAgICAgKDEgPDwgMSkKKyNkZWZpbmUgVkZJT19SRUdJT05fU1VCVFlQRV9ERVZJ
Q0VfU1RBVEVfQ1RMICAgICAgICgxKQorI2RlZmluZSBWRklPX1JFR0lPTl9TVUJUWVBFX0RFVklD
RV9TVEFURV9EQVRBX0NPTkZJRyAgICAgICgyKQorI2RlZmluZSBWRklPX1JFR0lPTl9TVUJUWVBF
X0RFVklDRV9TVEFURV9EQVRBX01FTU9SWSAgICAgICgzKQorI2RlZmluZSBWRklPX1JFR0lPTl9T
VUJUWVBFX0RFVklDRV9TVEFURV9EQVRBX0RJUlRZQklUTUFQICg0KQorCiAjZGVmaW5lIFZGSU9f
UkVHSU9OX1RZUEVfR0ZYICAgICAgICAgICAgICAgICAgICAoMSkKICNkZWZpbmUgVkZJT19SRUdJ
T05fU1VCVFlQRV9HRlhfRURJRCAgICAgICAgICAgICgxKQogCkBAIC04NjYsNiArODc0LDM2IEBA
IHN0cnVjdCB2ZmlvX2lvbW11X3NwYXByX3RjZV9yZW1vdmUgewogfTsKICNkZWZpbmUgVkZJT19J
T01NVV9TUEFQUl9UQ0VfUkVNT1ZFCV9JTyhWRklPX1RZUEUsIFZGSU9fQkFTRSArIDIwKQogCisj
ZGVmaW5lIFZGSU9fREVWSUNFX1NUQVRFX0lOVEVSRkFDRV9WRVJTSU9OIDEKKyNkZWZpbmUgVkZJ
T19ERVZJQ0VfREFUQV9DQVBfREVWSUNFX01FTU9SWSAxCisjZGVmaW5lIFZGSU9fREVWSUNFX0RB
VEFfQ0FQX1NZU1RFTV9NRU1PUlkgMgorCisjZGVmaW5lIFZGSU9fREVWSUNFX1NUQVRFX1JVTk5J
TkcgMAorI2RlZmluZSBWRklPX0RFVklDRV9TVEFURV9TVE9QIDEKKyNkZWZpbmUgVkZJT19ERVZJ
Q0VfU1RBVEVfTE9HR0lORyAyCisKKyNkZWZpbmUgVkZJT19ERVZJQ0VfREFUQV9BQ1RJT05fR0VU
X0JVRkZFUiAxCisjZGVmaW5lIFZGSU9fREVWSUNFX0RBVEFfQUNUSU9OX1NFVF9CVUZGRVIgMgor
CitzdHJ1Y3QgdmZpb19kZXZpY2Vfc3RhdGVfY3RsIHsKKwlfX3UzMiB2ZXJzaW9uOwkJICAvKiBy
byAqLworCV9fdTMyIGRldmljZV9zdGF0ZTsgICAgICAgLyogVkZJTyBkZXZpY2Ugc3RhdGUsIHdv
ICovCisJX191MzIgY2FwczsJCSAvKiBybyAqLworCXN0cnVjdCB7CisJCV9fdTMyIGFjdGlvbjsg
IC8qIHdvLCBHRVRfQlVGRkVSIG9yIFNFVF9CVUZGRVIgKi8KKwkJX191NjQgc2l6ZTsgICAgLypy
dywgdG90YWwgc2l6ZSBvZiBkZXZpY2UgY29uZmlnKi8KKwl9IGRldmljZV9jb25maWc7CisJc3Ry
dWN0IHsKKwkJX191MzIgYWN0aW9uOyAgICAvKiB3bywgR0VUX0JVRkZFUiBvciBTRVRfQlVGRkVS
ICovCisJCV9fdTY0IHNpemU7ICAgICAvKiBydywgdG90YWwgc2l6ZSBvZiBkZXZpY2UgbWVtb3J5
Ki8KKwkJX191NjQgcG9zOy8qY2h1bmsgb2Zmc2V0IGluIHRvdGFsIGJ1ZmZlciBvZiBkZXZpY2Ug
bWVtb3J5Ki8KKwl9IGRldmljZV9tZW1vcnk7CisJc3RydWN0IHsKKwkJX191NjQgc3RhcnRfYWRk
cjsgLyogd28gKi8KKwkJX191NjQgcGFnZV9ucjsgICAvKiB3byAqLworCX0gc3lzdGVtX21lbW9y
eTsKK30gX19hdHRyaWJ1dGVfXygocGFja2VkKSk7CisKIC8qICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovCiAKICNlbmRp
ZiAvKiBfVUFQSVZGSU9fSCAqLwotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwppbnRlbC1ndnQtZGV2IG1haWxpbmcgbGlzdAppbnRlbC1n
dnQtZGV2QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9y
Zy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWd2dC1kZXY=
